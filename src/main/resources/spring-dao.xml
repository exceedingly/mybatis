<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"/>

        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <property name="mapperLocations" value="classpath:com/mcd/mapper/*.xml"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

</beans>

















<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">-->

<!--    &lt;!&ndash; 整体干两件事  1  搞定提供数据源   2 搞定sqlsessionfactor &ndash;&gt;-->


<!--    &lt;!&ndash; 注意2点   1因为数据库 现在归spring管理  所以 spring-connection 这个包要导入到pom-->
<!--                  2 mybatis datasources 不用写了-->
<!--    &ndash;&gt;-->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
<!--        <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>-->
<!--        <property name="username" value="root"/>-->
<!--        <property name="password" value="123456"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash; 数据源搞定 接下来看SQLsessionfactory的 &ndash;&gt;-->
<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->

<!--        <property name="dataSource" ref="dataSource"/>-->

<!--        &lt;!&ndash; 绑定mybatis配置文件 &ndash;&gt;-->
<!--        <property name="configLocation" value="classpath:mybatis-config.xml"/>-->

<!--        &lt;!&ndash; 写了下面这行代码 mybatis 里面的-->
<!--        <mappers>-->
<!--                <mapper class="com.mcd.mapper.UserMapper"/>-->
<!--        </mappers> 就不用写了-->
<!--        &ndash;&gt;-->
<!--        <property name="mapperLocations" value="classpath:com/mcd/mapper/*.xml"/>-->
<!--     </bean>-->



<!--    &lt;!&ndash; 东西都配好了 找一个干活的 事物执行者 sqlsession sqlsessiontemplate 差不多 但是 sqlsessiontemplate线程安全 &ndash;&gt;-->
<!--    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--        &lt;!&ndash; 复习一下 构造器 三中注入方法 下标 setter 接口 这里用第一个 只能用第一个 因为源码没有set方法 &ndash;&gt;-->
<!--        <constructor-arg index="0" ref="sqlSessionFactory"/>-->
<!--    </bean>-->







<!--    &lt;!&ndash; 以上代码是固定的 任何人来写 都是这样 只需要把路径换了  专注与数据库 仅改动路径 &ndash;&gt;-->



<!--</beans>-->